version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: lms_postgres
    restart: always
    environment:
      POSTGRES_USER: lms_postgres
      POSTGRES_PASSWORD: nagarkot
      POSTGRES_DB: lms
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lms_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  feature-image-service:
    build: ./server/feature-image-service
    container_name: feature_image_service
    restart: always
    env_file:
      - ./server/feature-image-service/.env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      - lms_network
    volumes:
      - ./server/feature-image-service:/app
      # - /app/node_modules
    command: ["npm", "run", "dev"]

  frontend:
    build: ./client
    container_name: lms_frontend
    restart: always
    depends_on:
      - feature-image-service
    ports:
      - "3000:3000"
    networks:
      - lms_network
    env_file:
      - ./client/.env.local
    volumes:
      - ./client:/app
      # - /app/node_modules
    command: ["npm", "run", "dev"]

networks:
  lms_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
